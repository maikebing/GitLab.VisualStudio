<UserControl x:Class="GitLab.TeamFoundation.Views.ConnectSectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:controls="clr-namespace:GitLab.VisualStudio.Shared.Controls;assembly=GitLab.VisualStudio.Shared"
             xmlns:vms="clr-namespace:GitLab.TeamFoundation.ViewModels"
             xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:shared="clr-namespace:GitLab.VisualStudio.Shared;assembly=GitLab.VisualStudio.Shared"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="Image">
                <Setter Property="RenderOptions.BitmapScalingMode"
                        Value="HighQuality" />
            </Style>
            <Style TargetType="Separator">
                <Setter Property="Background"
                        Value="Red" />
                <Setter Property="Margin"
                        Value="3,0,3,0" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Style>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="RepositoriesListItemContainerStyle"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Padding"
                        Value="1" />

                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />

                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarHoverKey}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource SelectedItemBackground}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource {x:Static shell:VsBrushes.InactiveBorderKey}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VerticalSeparator"
                   TargetType="{x:Type Separator}">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static shell:VsBrushes.GrayTextKey}}" />
                <Setter Property="Margin"
                        Value="3,0,3,0" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RepoNameStyle"
                   TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CaptionTextKey}}" />
                <Setter Property="Margin"
                        Value="0,0,6,3" />
                <Setter Property="Text"
                        Value="{Binding Name}" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                       Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsFocused}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <!--<Setter Property="Foreground"
                                Value="{DynamicResource GitLabVsToolWindowText}" />-->
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                                       Value="true" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                       Value="False" />
                        </MultiDataTrigger.Conditions>
                        <!--<Setter Property="Foreground"
                                Value="{DynamicResource GitLabVsToolWindowText}" />-->
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
                    </MultiDataTrigger>
                    <DataTrigger Value="True"
                                 Binding="{Binding IsActived}">
                        <!--<Setter Property="Foreground"
                                Value="{DynamicResource GitLabVsToolWindowText}" />-->
                        <!--<Setter Property="Foreground"
                                Value="#000000" />-->
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RepoPathStyle"
                   TargetType="{x:Type TextBlock}">
                <Setter Property="Margin"
                        Value="0,0,3,3" />
                <Setter Property="TextTrimming"
                        Value="CharacterEllipsis" />
                <Setter Property="TextWrapping"
                        Value="NoWrap" />
                <!--<Setter Property="Foreground"
                        Value="{DynamicResource GitLabVsGrayText}" />-->
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static shell:VsBrushes.GrayTextKey}}" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="true" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
                    </MultiDataTrigger>
                    <!--<DataTrigger Value="True">
                        <DataTrigger.Binding>
                            <MultiBinding Converter="{StaticResource IsCurrentRepositoryConverter}" ConverterParameter="IsCurrentRepository">
                                <Binding />
                                <Binding Path="ViewModel" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:GitLabConnectContent}}" />
                            </MultiBinding>
                        </DataTrigger.Binding>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
                    </DataTrigger>-->
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel>
        <DockPanel.Resources>
            <Style x:Key="ActionLinkButton"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Focusable"
                        Value="True" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static shell:VsBrushes.ControlLinkTextKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock>
                                <Hyperlink Command="{TemplateBinding Command}"
                                           CommandParameter="{TemplateBinding CommandParameter}"
                                           Foreground="{TemplateBinding Foreground}">
                                  <Hyperlink.Resources>
                                    <Style TargetType="{x:Type Hyperlink}">
                                      <Style.Triggers>
                                        <MultiTrigger>
                                          <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver"
                                                        Value="false" />
                                            <Condition Property="IsEnabled"
                                                        Value="true" />
                                          </MultiTrigger.Conditions>
                                          <MultiTrigger.Setters>
                                            <Setter Property="TextDecorations"
                                                        Value="None" />
                                            <Setter Property="FrameworkElement.Cursor"
                                                        Value="None" />
                                          </MultiTrigger.Setters>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                          <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver"
                                                        Value="true" />
                                            <Condition Property="IsEnabled"
                                                        Value="true" />
                                          </MultiTrigger.Conditions>
                                          <MultiTrigger.Setters>
                                            <Setter Property="TextDecorations"
                                                        Value="Underline" />
                                            <Setter Property="FrameworkElement.Cursor"
                                                        Value="Hand" />
                                          </MultiTrigger.Setters>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                          <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled"
                                                        Value="false" />
                                          </MultiTrigger.Conditions>
                                          <MultiTrigger.Setters>
                                            <Setter Property="TextDecorations"
                                                        Value="None" />
                                          </MultiTrigger.Setters>
                                        </MultiTrigger>
                                      </Style.Triggers>
                                    </Style>
                                  </Hyperlink.Resources>
                                  <Run Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
                                </Hyperlink>
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </DockPanel.Resources>
        <WrapPanel Orientation="Horizontal"
                   Margin="6,0,0,6"
                   DockPanel.Dock="Top" VerticalAlignment="Center">
            <Button Style="{StaticResource ActionLinkButton}"
                    KeyboardNavigation.TabIndex="0"
                    Command="{Binding CloneCommand}"
                    Content="{x:Static shared:Strings.Common_Clone}" />
            <Separator Margin="3,0,3,0"
                       Style="{StaticResource VerticalSeparator}" />
            <Button Style="{StaticResource ActionLinkButton}"
                    KeyboardNavigation.TabIndex="1"
                    Command="{Binding CreateCommand}"
                    Content="{x:Static shared:Strings.Common_CreateRepository}" />
            <Separator Margin="3,0,3,0"
                       Style="{StaticResource VerticalSeparator}" />
            <Button Style="{StaticResource ActionLinkButton}"
                    KeyboardNavigation.TabIndex="2"
                    Command="{Binding SignOutCommand}"
                    Content="{x:Static shared:Strings.Common_Quit}" />
            <!--<Button Content="test" Click="Button_Click" />-->
        </WrapPanel>

        <ListView ItemsSource="{Binding Repositories}"
                  SelectedItem="{Binding Path=SelectedRepository, Mode=TwoWay}"
                  Margin="5,0,6,0"
                  ItemContainerStyle="{StaticResource RepositoriesListItemContainerStyle}"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  VerticalAlignment="Top"
                  HorizontalContentAlignment="Stretch"
                  TextSearch.TextPath="Name"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.ScrollUnit="Pixel"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  Visibility="{Binding IsRepositoriesVisible}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding OpenRepositoryCommand}"
                                           CommandParameter="{Binding SelectedRepository}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!--<controls:OcticonImage Grid.Column="0"
                                               Margin="11,1,6,1"
                                               Width="16"
                                               Height="16"
                                               Foreground="{DynamicResource GitLabVsToolWindowText}"
                                               Icon="{Binding Path=Icon}" />-->
                        <controls:OcticonImage Grid.Column="0"
                                               Margin="11,1,6,1"
                                               Width="16"
                                               Height="16"
                                               Foreground="#F05033"
                                               Icon="{Binding Path=Icon}" />
                        <!--<TextBlock       Grid.Column="1"
                                         Style="{StaticResource RepoNameStyle}" />-->
                        <TextBlock       Grid.Column="1"
                                         Style="{StaticResource RepoNameStyle}" />
                        <Separator       Grid.Column="2"
                                         Margin="0,0,6,3"
                                         Style="{StaticResource VerticalSeparator}" />
                        <TextBlock       Grid.Column="3"
                                         Text="{Binding Path=Path}"
                                         Style="{StaticResource RepoPathStyle}" />
                        <Grid.ToolTip>
                            <ToolTip>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0"
                                               Grid.Column="0"
                                               Margin="0,0,6,0">
                                        <Run Text="{x:Static shared:Strings.Repository_Name}" /><Run Text=": " />
                                    </TextBlock>
                                    <TextBlock Grid.Row="0"
                                               Grid.Column="1"
                                               Text="{Binding Name}" />
                                    <TextBlock Grid.Row="1"
                                               Grid.Column="0"
                                               Margin="0,0,6,0">
                                        <Run Text="{x:Static shared:Strings.Common_Path}" /><Run Text=": " />
                                    </TextBlock>
                                    <TextBlock Grid.Row="1"
                                               Grid.Column="1"
                                               Text="{Binding Path=Path}" />
                                </Grid>
                            </ToolTip>
                        </Grid.ToolTip>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DockPanel>
</UserControl>